{"version":3,"file":"angular-file-uploader.js.map","sources":["ng://angular-file-uploader/lib/angular-file-uploader.service.ts","ng://angular-file-uploader/lib/angular-file-uploader.component.ts","ng://angular-file-uploader/lib/angular-file-uploader.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AngularFileUploaderService {\n\n  constructor() { }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges, Inject, ViewEncapsulation } from '@angular/core';\n@Component({\n  selector: \"angular-file-uploader\",\n  template: `<div class=\"container\" *ngIf=\"(theme !== 'attachPin')\" id=\"default\">\n\n    <!-- Drag n Drop theme Starts -->\n    <div *ngIf=\"theme == 'dragNDrop'\" id=\"dragNDrop\" [ngClass]=\"(hideSelectBtn && hideResetBtn) ? null : 'dragNDropBtmPad'\" class=\"dragNDrop\">\n        <div style=\"position:relative;\">\n            <div id=\"div1\" class=\"div1 afu-dragndrop-box\" (drop)=\"drop($event)\" (dragover)=\"allowDrop($event)\">\n                <p class=\"afu-dragndrop-text\">Drag N Drop</p>\n            </div>\n            <!-- <span class='label label-info' id=\"upload-file-info{{id}}\">{{selectedFiles[0]?.name}}</span> -->\n        </div>\n    </div>\n    <!-- Drag n Drop theme Ends -->\n\n    <label for=\"sel{{id}}\" class=\"btn btn-primary btn-sm afu-select-btn\" *ngIf=\"!hideSelectBtn\">Select File<span *ngIf=\"multiple\">s</span></label>\n    <input type=\"file\" id=\"sel{{id}}\" style=\"display: none\" *ngIf=\"!hideSelectBtn\" (change)=\"onChange($event)\" title=\"Select file\"\n        name=\"files[]\" [accept]=formatsAllowed [attr.multiple]=\"multiple ? '' : null\" />\n    <button class=\"btn btn-info btn-sm resetBtn afu-reset-btn\" (click)=\"resetFileUpload()\" *ngIf=\"!hideResetBtn\">Reset</button>\n    <br *ngIf=\"!hideSelectBtn\">\n    <p class=\"constraints-info afu-constraints-info\">({{formatsAllowed}}) Size limit- {{(convertSize(maxSize *1024000))}}</p>\n    <!--Selected file list-->\n    <div class=\"row afu-valid-file\" *ngFor=\"let sf of selectedFiles;let i=index\" >\n        <p class=\"col-xs-3 textOverflow\"><span class=\"text-primary\">{{sf.name}}</span></p>\n        <p class=\"col-xs-3 padMarg sizeC\"><strong>({{convertSize(sf.size)}})</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\n        <!--  <input class=\"col-xs-3 progress caption\"  type=\"text\"  placeholder=\"Caption..\"  [(ngModel)]=\"Caption[i]\"  *ngIf=\"uploadClick\"/> -->\n        <div class=\"progress col-xs-3 padMarg afu-progress-bar\" *ngIf=\"singleFile && progressBarShow && !hideProgressBar\">\n            <span class=\"progress-bar progress-bar-success\" role=\"progressbar\" [ngStyle]=\"{'width':percentComplete+'%'}\">{{percentComplete}}%</span>\n        </div>\n        <a class=\"col-xs-1\" role=\"button\" (click)=\"removeFile(i,'sf')\" *ngIf=\"uploadClick\"><i class=\"fa fa-times\"></i></a>\n    </div>\n    <!--Invalid file list-->\n    <div class=\"row text-danger afu-invalid-file\" *ngFor=\"let na of notAllowedList;let j=index\">\n        <p class=\"col-xs-3 textOverflow\"><span>{{na['fileName']}}</span></p>\n        <p class=\"col-xs-3 padMarg sizeC\"><strong>({{na['fileSize']}})</strong></p>\n        <p class=\"col-xs-3 \">{{na['errorMsg']}}</p>\n        <a class=\"col-xs-1 delFileIcon\" role=\"button\" (click)=\"removeFile(j,'na')\" *ngIf=\"uploadClick\">&nbsp;<i class=\"fa fa-times\"></i></a>\n    </div>\n\n    <p *ngIf=\"uploadMsg\" class=\"{{uploadMsgClass}} + afu-upload-status\">{{uploadMsgText}}<p>\n    <div *ngIf=\"!singleFile && progressBarShow && !hideProgressBar\">\n        <div class=\"progress col-xs-4 padMarg afu-progress-bar\">\n            <span class=\"progress-bar progress-bar-success\" role=\"progressbar\" [ngStyle]=\"{'width':percentComplete+'%'}\">{{percentComplete}}%</span>\n        </div>\n        <br>\n        <br>\n    </div>\n    <button class=\"btn btn-success afu-upload-btn\" type=\"button\" (click)=\"uploadFiles()\" [disabled]=!uploadBtn>{{uploadBtnText}}</button>\n    <br>\n</div>\n\n<!--/////////////////////////// ATTACH PIN THEME  //////////////////////////////////////////////////////////-->\n<div *ngIf=\"theme == 'attachPin'\" id=\"attachPin\">\n    <div style=\"position:relative;padding-left:6px\">\n        <a class='btn up_btn afu-attach-pin' (click)=\"attachpinOnclick()\">\n            {{attachPinText}}\n            <i class=\"fa fa-paperclip\" aria-hidden=\"true\"></i>\n            <!-- <p style=\"margin-top:10px\">({{formatsAllowed}}) Size limit- {{(convertSize(maxSize * 1024000))}}</p> -->\n            <input type=\"file\" id=\"sel{{id}}\" (change)=\"onChange($event)\" style=\"display: none\" title=\"Select file\" name=\"files[]\" [accept]=formatsAllowed\n                [attr.multiple]=\"multiple ? '' : null\" />\n            <br>\n        </a>\n        &nbsp;\n        <span class='label label-info' id=\"upload-file-info{{id}}\">{{selectedFiles[0]?.name}}</span>\n    </div>\n</div>\n\n<!--/////////////////////////// DRAG N DROP THEME  //////////////////////////////////////////////////////////-->\n<!-- <div *ngIf=\"theme == 'dragNDrop'\" id=\"dragNDrop\">\n  <div style=\"position:relative;padding-left:6px\">\n    <div id=\"div1\" (drop)=\"drop($event)\" (dragover)=\"allowDrop($event)\">\n      <p>Drag N Drop</p>\n    </div>\n    <span class='label label-info' id=\"upload-file-info{{id}}\">{{selectedFiles[0]?.name}}</span>\n  </div>\n</div> -->` ,\n  styles: [`.constraints-info{margin-top:10px;font-style:italic}.padMarg{padding:0;margin-bottom:0}.caption{margin-right:5px}.textOverflow{white-space:nowrap;padding-right:0;overflow:hidden;text-overflow:ellipsis}.up_btn{color:#000;background-color:transparent;border:2px solid #5c5b5b;border-radius:22px}.delFileIcon{text-decoration:none;color:#ce0909}.dragNDrop .div1{display:border-box;border:2px dashed #5c5b5b;height:6rem;width:20rem}.dragNDrop .div1>p{text-align:center;font-weight:700;color:#5c5b5b;margin-top:1.4em}.dragNDropBtmPad{padding-bottom:2rem}@media screen and (max-width:620px){.caption{padding:0}}@media screen and (max-width:510px){.sizeC{width:25%}}@media screen and (max-width:260px){.caption,.sizeC{font-size:10px}}.resetBtn{margin-left:3px}`]\n})\nexport class AngularFileUploaderComponent implements OnInit, OnChanges {\n  @Input()\n  config: any = {};\n  @Input()\n  resetUpload: boolean = this.config[\"resetUpload\"];\n  @Output()\n  ApiResponse = new EventEmitter();\n\n  theme: string;\n  id: number;\n  hideProgressBar: boolean;\n  maxSize: number;\n  uploadAPI: string;\n  formatsAllowed: string;\n  multiple: boolean;\n  headers: any;\n  hideResetBtn: boolean;\n  hideSelectBtn: boolean;\n  attachPinText: string;\n  uploadBtnText: string;\n\n  idDate: number = +new Date();\n  reg: RegExp = /(?:\\.([^.]+))?$/;\n  selectedFiles: Array<any> = [];\n  notAllowedList: Array<Object> = [];\n  Caption: Array<string> = [];\n  singleFile = true;\n  progressBarShow = false;\n  uploadBtn = false;\n  uploadMsg = false;\n  afterUpload = false;\n  uploadClick = true;\n  uploadMsgText: string;\n  uploadMsgClass: string;\n  percentComplete: number;\n\n  constructor() {\n    //console.log(\"id: \",this.id);\n    //console.log(\"idDate: \",this.idDate);\n    //console.log(Math.random());\n  }\n\n  ngOnChanges(rst: SimpleChanges) {\n    if (rst[\"config\"]) {\n      this.theme = this.config[\"theme\"] || \"\";\n      this.id =\n        this.config[\"id\"] ||\n        parseInt((this.idDate / 10000).toString().split(\".\")[1]) +\n          Math.floor(Math.random() * 20) * 10000;\n      this.hideProgressBar = this.config[\"hideProgressBar\"] || false;\n      this.hideResetBtn = this.config[\"hideResetBtn\"] || false;\n      this.hideSelectBtn = this.config[\"hideSelectBtn\"] || false;\n      this.uploadBtnText = this.config[\"uploadBtnText\"] || \"Upload\";\n      this.maxSize = this.config[\"maxSize\"] || 20;\n      this.uploadAPI = this.config[\"uploadAPI\"][\"url\"];\n      this.formatsAllowed =\n        this.config[\"formatsAllowed\"] || \".jpg,.png,.pdf,.docx,.txt,.gif,.jpeg\";\n      this.multiple = this.config[\"multiple\"] || false;\n      this.headers = this.config[\"uploadAPI\"][\"headers\"] || {};\n      this.attachPinText =\n        this.config[\"attachPinText\"] || \"Attach supporting documents..\";\n      //console.log(\"config: \", this.config);\n      //console.log(this.config[\"maxSize\"]);\n      //console.log(this.headers);\n      //console.log(\"rst: \", rst);\n    }\n\n    if (rst[\"resetUpload\"]) {\n      if (rst[\"resetUpload\"].currentValue === true) {\n        this.resetFileUpload();\n      }\n    }\n  }\n\n  ngOnInit() {\n    //console.log(\"Id: \", this.id);\n    this.resetUpload = false;\n  }\n\n  resetFileUpload() {\n    this.selectedFiles = [];\n    this.Caption = [];\n    this.notAllowedList = [];\n    this.uploadMsg = false;\n    this.uploadBtn = false;\n  }\n\n  onChange(event: any) {\n    //console.log(this.maxSize + this.formatsAllowed + this.multiple);\n    this.notAllowedList = [];\n    //console.log(\"onchange hit\");\n    if (this.afterUpload || !this.multiple) {\n      this.selectedFiles = [];\n      this.Caption = [];\n      this.afterUpload = false;\n    }\n    //FORMATS ALLOWED LIST\n    //console.log(\"FORMATS ALLOWED LIST= \"+this.formatsAllowed);\n    //NO OF FORMATS ALLOWED\n    let formatsCount: any;\n    formatsCount = this.formatsAllowed.match(new RegExp(\"\\\\.\", \"g\"));\n    formatsCount = formatsCount.length;\n    //console.log(\"NO OF FORMATS ALLOWED= \"+formatsCount);\n    //console.log(\"-------------------------------\");\n\n    //ITERATE SELECTED FILES\n    let file: FileList;\n    if (event.type == \"drop\") {\n      file = event.dataTransfer.files;\n      //console.log(\"type: drop\");\n    } else {\n      file = event.target.files || event.srcElement.files;\n      //console.log(\"type: change\");\n    }\n    //console.log(file);\n    let currentFileExt: any;\n    let ext: any;\n    let frmtAllowed: boolean;\n    for (let i = 0; i < file.length; i++) {\n      //CHECK FORMAT\n      //CURRENT FILE EXTENSION\n      currentFileExt = this.reg.exec(file[i].name);\n      currentFileExt = currentFileExt[1];\n      //console.log(file[i].name);\n      frmtAllowed = false;\n      //FORMAT ALLOWED LIST ITERATE\n      for (let j = formatsCount; j > 0; j--) {\n        ext = this.formatsAllowed.split(\".\")[j];\n        //console.log(\"FORMAT LIST (\"+j+\")= \"+ext.split(\",\")[0]);\n        if (j == formatsCount) {\n          ext = this.formatsAllowed.split(\".\")[j] + \",\";\n        } //check format\n        if (currentFileExt.toLowerCase() == ext.split(\",\")[0]) {\n          frmtAllowed = true;\n        }\n      }\n\n      if (frmtAllowed) {\n        //console.log(\"FORMAT ALLOWED\");\n        //CHECK SIZE\n        if (file[i].size > this.maxSize * 1024000) {\n          //console.log(\"SIZE NOT ALLOWED (\"+file[i].size+\")\");\n          this.notAllowedList.push({\n            fileName: file[i].name,\n            fileSize: this.convertSize(file[i].size),\n            errorMsg: \"Invalid size\"\n          });\n          continue;\n        } else {\n          //format allowed and size allowed then add file to selectedFile array\n          this.selectedFiles.push(file[i]);\n        }\n      } else {\n        //console.log(\"FORMAT NOT ALLOWED\");\n        this.notAllowedList.push({\n          fileName: file[i].name,\n          fileSize: this.convertSize(file[i].size),\n          errorMsg: \"Invalid format\"\n        });\n        continue;\n      }\n    }\n\n    if (this.selectedFiles.length !== 0) {\n      this.uploadBtn = true;\n      if (this.theme == \"attachPin\") this.uploadFiles();\n    } else {\n      this.uploadBtn = false;\n    }\n    this.uploadMsg = false;\n    this.uploadClick = true;\n    this.percentComplete = 0;\n    event.target.value = null;\n  }\n\n  uploadFiles() {\n    //console.log(this.selectedFiles);\n\n    let i: any;\n    this.progressBarShow = true;\n    this.uploadClick = false;\n    this.notAllowedList = [];\n    let isError = false;\n\n    let xhr = new XMLHttpRequest();\n    let formData = new FormData();\n\n    for (i = 0; i < this.selectedFiles.length; i++) {\n      if (this.Caption[i] == undefined) \n        this.Caption[i] = \"file\" + i;\n      //Add DATA TO BE SENT\n      formData.append(\n        this.Caption[i],\n        this.selectedFiles[i] /*, this.selectedFiles[i].name*/\n      );\n      //console.log(this.selectedFiles[i]+\"{\"+this.Caption[i]+\" (Caption)}\");\n    }\n\n    if (i > 1) {\n      this.singleFile = false;\n    } else {\n      this.singleFile = true;\n    }\n\n    xhr.onreadystatechange = evnt => {\n      //console.log(\"onready\");\n      if (xhr.readyState === 4) {\n        if (xhr.status !== 200) {\n          isError = true;\n          this.progressBarShow = false;\n          this.uploadBtn = false;\n          this.uploadMsg = true;\n          this.afterUpload = true;\n          this.uploadMsgText = \"Upload Failed !\";\n          this.uploadMsgClass = \"text-danger lead\";\n          //console.log(this.uploadMsgText);\n          //console.log(evnt);\n        }\n        this.ApiResponse.emit(xhr);\n      }\n    };\n\n    xhr.upload.onprogress = evnt => {\n      this.uploadBtn = false; // button should be disabled by process uploading\n      if (evnt.lengthComputable) {\n        this.percentComplete = Math.round((evnt.loaded / evnt.total) * 100);\n      }\n      //console.log(\"Progress...\"/*+this.percentComplete+\" %\"*/);\n    };\n\n    xhr.onload = evnt => {\n      //console.log(\"onload\");\n      //console.log(evnt);\n      this.progressBarShow = false;\n      this.uploadBtn = false;\n      this.uploadMsg = true;\n      this.afterUpload = true;\n      if (!isError) {\n        this.uploadMsgText = \"Successfully Uploaded !\";\n        this.uploadMsgClass = \"text-success lead\";\n        //console.log(this.uploadMsgText + \" \" + this.selectedFiles.length + \" file\");\n      }\n    };\n\n    xhr.onerror = evnt => {\n      //console.log(\"onerror\");\n      //console.log(evnt);\n    };\n\n    xhr.open(\"POST\", this.uploadAPI, true);\n    for (const key of Object.keys(this.headers)) {\n      // Object.keys will give an Array of keys\n      xhr.setRequestHeader(key, this.headers[key]);\n    }\n    //let token = sessionStorage.getItem(\"token\");\n    //xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\n    //xhr.setRequestHeader('Authorization', `Bearer ${token}`);\n    xhr.send(formData);\n  }\n\n  removeFile(i: any, sf_na: any) {\n    //console.log(\"remove file clicked \" + i)\n    if (sf_na == \"sf\") {\n      this.selectedFiles.splice(i, 1);\n      this.Caption.splice(i, 1);\n    } else {\n      this.notAllowedList.splice(i, 1);\n    }\n\n    if (this.selectedFiles.length == 0) {\n      this.uploadBtn = false;\n    }\n  }\n\n  convertSize(fileSize: number) {\n    //console.log(fileSize + \" - \"+ str);\n    return fileSize < 1024000\n      ? (fileSize / 1024).toFixed(2) + \" KB\"\n      : (fileSize / 1024000).toFixed(2) + \" MB\";\n  }\n\n  attachpinOnclick() {\n    //console.log(\"ID: \", this.id);\n    document.getElementById(\"sel\" + this.id)!.click();\n    //$(\"#\"+\"sel\"+this.id).click();\n  }\n\n  drop(event: any) {\n    event.stopPropagation();\n    event.preventDefault();\n    //console.log(\"drop: \", event);\n    //console.log(\"drop: \", event.dataTransfer.files);\n    this.onChange(event);\n  }\n  allowDrop(event: any) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = \"copy\";\n    //console.log(\"allowDrop: \",event)\n  }\n}\n\n/* interface CONFIG {\n  uploadAPI: string;\n  multiple?: boolean;\n  formatsAllowed?: string;\n  maxSize?: number;\n  id?: number;\n  resetUpload?: boolean;\n  theme?: string;\n  hideProgressBar?: boolean;\n }\n */","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AngularFileUploaderComponent } from './angular-file-uploader.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [AngularFileUploaderComponent],\n  exports: [AngularFileUploaderComponent]\n})\nexport class AngularFileUploaderModule { }\n"],"names":["tslib_1.__values"],"mappings":"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"}
